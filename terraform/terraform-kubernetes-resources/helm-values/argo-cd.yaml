## Chart source: https://artifacthub.io/packages/helm/argo/argo-cd
configs:
  params:
    server.insecure: true
  rbac:
    policy.csv: |
      g, startdevopswithme:ArgoCDAdmins, role:admin
      g, startdevopswithme:ArgoCDReadOnly, role:readonly
  cm:
    # Dex configuration
    ##? Secret can be used in this way. ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/user-management/index.md#alternative
    ## clientSecret: $dex.github.clientSecret # Alternatively $<some_K8S_secret>:dex.github.clientSecret
    ## https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#1-register-the-application-in-the-identity-provider
    url: https://argocd.worldofcontainers.tk
    dex.config: |
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: ${GITHUB_CLIENT_ID}
            clientSecret: ${GITHUB_CLIENT_SECRET}
            orgs:
            - name: startdevopswithme
              teams:
                - ArgoCDAdmins
                - ArgoCDReadOnly

  ##? ‚ö†Ô∏è Argo is stupid and does not support oci repo out of the box, flux is better üò¨
  repositories:
    bitnami-external-dns:
      name: bitnamicharts
      url: registry-1.docker.io/bitnamicharts
      type: helm
      enableOCI: 'true'
      username: '${DOCKER_LOGIN_ID}'
      password: '${DOCKER_LOGIN_PASSWORD}'
global:
  nodeSelector:
    crossplane: "false"
  image:
    tag: v2.7.1
server:
  ## Server metrics service configuration
  metrics:
    # -- Deploy metrics service
    enabled: false
    serviceMonitor:
      # -- Enable a prometheus ServiceMonitor
      enabled: false
  ingress:
    # -- Enable an ingress resource for the Argo CD server
    enabled: true
    # -- Additional ingress annotations
    # -- Required with kubernetesingress-nginx controller, ref:  https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#kubernetesingress-nginx
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # -- Defines which ingress controller will implement the resource
    ingressClassName: nginx
    # -- List of ingress hosts
    ## Argo Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    hosts:
      - argocd.worldofcontainers.tk
    tls:
    - secretName: argocd-tls-secret
      hosts:
        - argocd.worldofcontainers.tk
## ApplicationSet controller
applicationSet:
  # -- Enable ApplicationSet controller
  enabled: false
## Notifications controller
notifications:
  # -- Enable notifications controller
  enabled: false
crds:
  # -- Install and upgrade CRDs
  install: true
  # -- Keep CRDs on chart uninstall
  # -- remove as the terraform is not able to install again if release is uninstalled and crds are left.
  keep: false
