apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  # Add labels to your application object.
  labels:
    name: external-dns
spec:
  # The project the application belongs to.
  project: platform-engineering

  # # Source of the application manifests
  # source:
  #   repoURL: https://github.com/argoproj/argocd-example-apps.git  # Can point to either a Helm chart repo or a git repo.
  #   targetRevision: HEAD  # For Helm, this refers to the chart version.
  #   path: external-dns  # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.

    # Sources field specifies the list of sources for the application
  sources:
    - repoURL: registry-1.docker.io/bitnamicharts/external-dns # Can point to either a Helm chart repo or a git repo.
      targetRevision: 6.18.0  # For Helm, this refers to the chart version.
      chart: external-dns # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.
      helm:
        # Helm values files for overriding values in the helm chart
        valueFiles:
        - $values/argocd/apps/external-dns/argo-values.yaml
        skipCrds: false

    - repoURL: 'https://github.com/ishuar/platform-engineering'
      targetRevision: main
      ref: values

      # # plugin specific config
      # plugin:
      #   # If the plugin is defined as a sidecar and name is not passed, the plugin will be automatically matched with the
      #   # Application according to the plugin's discovery rules.
      #   name: mypluginname
      #   # environment variables passed to the plugin
      #   env:
      #     - name: FOO
      #       value: bar
      #   # Plugin parameters are new in v2.5.
      #   parameters:
      #     - name: string-param
      #       string: example-string
      #     - name: array-param
      #       array: [item1, item2]
      #     - name: map-param
      #       map:
      #         param-name: param-value



  # Destination cluster and namespace to deploy the application
  destination:
    # cluster API URL
    server: https://kubernetes.default.svc
    # or cluster name
    # name: in-cluster
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: external-dns

  # Extra information to show in the Argo CD Application details tab
  info:
    - name: 'external-dns-chart-values'
      value: 'https://github.com/kubernetes-sigs/external-dns/tree/master/charts/external-dns'

  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: false # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
    # - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
    - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
    - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation

    # The retry feature is available since v1.7
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy


  # RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for
  # informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional
  # circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the
  # space used to store the history, so we do not recommend increasing it.
  revisionHistoryLimit: 10
